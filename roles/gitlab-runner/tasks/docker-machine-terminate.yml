---
- name: List all docker-machine instances
  shell: docker-machine ls --quiet --format "\{\{ .Name \}\}" | grep {{ app | quote }}
  become: true
  changed_when: false
  failed_when: false
  register: docker_machine_ls

- name: Terminate docker-machine instances
  when: docker_machine_ls.stdout_lines | length > 0
  block:
    - name: Query gitlab-runner service status
      command: gitlab-runner status
      become: true
      changed_when: false
      failed_when: false
      register: gitlab_runner_status

    - name: Stop gitlab-runner service
      command: gitlab-runner stop
      become: true
      when: gitlab_runner_status.rc != 0

    - name: List all running docker-machine instances
      shell: docker-machine ls --quiet --format "\{\{ .Name \}\}" --filter state=Running | grep {{ app | quote }}
      become: true
      changed_when: false
      failed_when: false
      register: docker_machine_running_ls

    - name: Stop all running docker-machine instances
      command: docker-machine stop {{ item | quote }}
      become: true
      ignore_errors: true
      with_items: "{{ docker_machine_running_ls.stdout_lines }}"

    - name: Remove all docker-machine instances
      command: docker-machine rm --force -y {{ item | quote }}
      become: true
      ignore_errors: true
      with_items: "{{ docker_machine_ls.stdout_lines }}"

    - name: Remove all docker-machine EC2 instances
      ec2_instance:
        region:        "{{ vpc.region }}"
        name:          "{{ docker_cert_gen_instance_name }}"
        vpc_subnet_id: "{{ runner.machine_subnet.subnet_info.id }}"
        state: absent
      with_items: "{{ docker_machine_ls.stdout_lines }}"

    - name: Remove all docker-machine EC2 keypairs
      ec2_key:
        region: "{{ vpc.region }}"
        name:   "{{ docker_cert_gen_instance_name }}"
        state:  absent
        wait:   true
      with_items: "{{ docker_machine_ls.stdout_lines }}"
